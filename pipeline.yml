name: ADO-self-hosted-pipeline

# This is the default pipeline for a self-hosted Windows agent on Azure Devops.

# Install flyway cli on agent, add flyway to PATH: https://download.red-gate.com/maven/release/org/flywaydb/enterprise/flyway-commandline
# Install python3 on agent and add pip to PATH if staticCodeAnalysis is set to true
# Make sure this file is in the same directory as the migrations folder of the Flyway Enterprise project. 
# Provision a dev, shadow, build databases, as well as any target environments that need to be created: https://documentation.red-gate.com/fd/proof-of-concept-checklist-152109292.html
# Further instructions if needed here: https://documentation.red-gate.com/fd/self-hosted-windows-agent-yaml-pipeline-in-azure-devops-158564470.html
# For video reference, see: https://www.red-gate.com/hub/university/courses/flyway/flyway-desktop/setting-up-a-flyway-desktop-project/basic-flyway-desktop-project-setup-and-configuration

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - migrations/*

parameters:
  
  # IMPORTANT: DO NOT ADD DEPLOYMENT STEPS TO THE BUILD STAGE - THE BUILD IS A DESTRUCTIVE ACTION
  - name: buildStage
    type: object
    default: 

      stage: 'Build'
      displayName: 'Deploy Build'
      executeBuild: false
      variableGroupName: 'SimpleTalkDB_variables' #userName, password, target_database_JDBC, databaseName

variables:

  # This is the relative path to the migrations folder in your project, such as:
  # $(System.DefaultWorkingDirectory)\project
  # The default is to have the migrations folder in the same directory as the yml file
  WORKING_DIRECTORY: $(System.DefaultWorkingDirectory)

  FLYWAY: 'flyway -user="$(userName)" -password="$(password)" "-plugins.clean.mode=default" -schemas="$(schemas)" -errorOverrides=S0001:0:I- -baselineOnMigrate=true -licenseKey=$(FLYWAY_LICENSE_KEY) -locations="filesystem:$(WORKING_DIRECTORY)\migrations" -workingDirectory="$(WORKING_DIRECTORY)"'
